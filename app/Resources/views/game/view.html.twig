{% extends 'base.html.twig' %}

{% block content %}
    <div class="row">
        <div class="col-xs-12 js-maze" data-url="{{ url('game_refresh', { 'uuid': game.uuid }) }}">
            {% include ':game:viewMaze.html.twig' with { 'game': game, 'maze': maze } %}
        </div>
    </div>

    <hr>

    <div class="container">
        {% include ':game:viewButtons.html.twig' with { 'game': game } %}
    </div>

    <hr>

    <div class="container js-panels">
        {% include ':game:viewPanels.html.twig' with { 'game': game, 'maze': maze } %}
    </div>
{% endblock %}

{% block more_javascripts %}
    <script language="JavaScript">

        (function (win, $) {

            'use strict';

            var $maze = $('.js-maze'),
                $panels = $('.js-panels'),
                $btnStart = $('.js-btn-start'),
                $btnStop = $('.js-btn-stop'),
                $btnReset = $('.js-btn-reset'),
                refreshUrl = $maze.data('url'),
                startUrl = $btnStart.data('url'),
                stopUrl = $btnStop.data('url'),
                resetUrl = $btnReset.data('url');

            /**
             * configureButtons()
             */
            var configureButtons = function() {
                $btnStart.click(function(ev) {
                    ev.preventDefault();
                    startPlaying();
                });

                $btnStop.click(function(ev) {
                    ev.preventDefault();
                    stopPlaying();
                });

                $btnReset.click(function(ev) {
                    ev.preventDefault();
                    resetPlaying();
                });
            };

            /**
             * startPlaying()
             */
            var startPlaying = function () {
                $.get(startUrl)
                    .done(function() {
                        $btnStart.attr('disabled', 'disabled');
                        $btnStop.attr('disabled', null);
                        refreshMaze();
                    })
                    .fail(function(jqXHR, textStatus, errorMessage) {
                        alert('An error occurred on the server. ' + errorMessage);
                    });
            };

            /**
             * stopPlaying()
             */
            var stopPlaying = function () {
                $.get(stopUrl)
                    .done(function() {
                        $btnStart.attr('disabled', null);
                        $btnStop.attr('disabled', 'disabled');
                        refreshMaze();
                    })
                    .fail(function(jqXHR, textStatus, errorMessage) {
                        alert('An error occurred on the server. ' + errorMessage);
                    });
            };

            /**
             * resetPlaying()
             */
            var resetPlaying = function () {
                $.get(resetUrl)
                    .done(function() {
                        $btnStart.attr('disabled', null);
                        $btnStop.attr('disabled', 'disabled');
                        refreshMaze();
                    })
                    .fail(function(jqXHR, textStatus, errorMessage) {
                        alert('An error occurred on the server. ' + errorMessage);
                    });
            };

            /**
             * startTimer()
             */
            var startTimer = function () {
                if ($btnStop.attr('disabled') != 'disabled') {
                    win.setTimeout(refreshMaze, 1000);
                }
            };

            /**
             * refreshMaze()
             */
            var refreshMaze = function () {
                $.get(refreshUrl)
                    .done(function(data) {
                        $maze.html(data.mazeHtml);
                        $panels.html(data.panelsHtml);
                        if (data.playing) {
                            $btnStop.attr('disabled', null);
                            startTimer();
                        } else {
                            $btnStop.attr('disabled', 'disabled');
                            if (data.finished) {
                                $btnStart.attr('disabled', 'disabled');
                            }
                        }
                    })
                    .fail(function(jqXHR, textStatus, errorMessage) {
                        alert('An error occurred refreshing the window. ' + errorMessage);
                        location.reload();
                    });
            };

            /**
             * init()
             */
            var init = function() {
                configureButtons();
                startTimer();
            };

            /**
             * Main process
             */
            init();

            return {
                init: init
            };

        }(window, jQuery));
    </script>
{% endblock %}
